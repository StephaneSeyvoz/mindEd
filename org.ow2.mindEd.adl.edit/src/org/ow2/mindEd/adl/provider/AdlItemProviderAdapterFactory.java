/**
 */
package org.ow2.mindEd.adl.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.ow2.mindEd.adl.util.AdlAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class AdlItemProviderAdapterFactory extends AdlAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public AdlItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.AdlFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdlFileItemProvider adlFileItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.AdlFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdlFileAdapter() {
		if (adlFileItemProvider == null) {
			adlFileItemProvider = new AdlFileItemProvider(this);
		}

		return adlFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.ArchitectureDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureDefinitionItemProvider architectureDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.ArchitectureDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArchitectureDefinitionAdapter() {
		if (architectureDefinitionItemProvider == null) {
			architectureDefinitionItemProvider = new ArchitectureDefinitionItemProvider(this);
		}

		return architectureDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.ImportDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportDefinitionItemProvider importDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.ImportDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportDefinitionAdapter() {
		if (importDefinitionItemProvider == null) {
			importDefinitionItemProvider = new ImportDefinitionItemProvider(this);
		}

		return importDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.CompositeDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeDefinitionItemProvider compositeDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.CompositeDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeDefinitionAdapter() {
		if (compositeDefinitionItemProvider == null) {
			compositeDefinitionItemProvider = new CompositeDefinitionItemProvider(this);
		}

		return compositeDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.PrimitiveDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveDefinitionItemProvider primitiveDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.PrimitiveDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveDefinitionAdapter() {
		if (primitiveDefinitionItemProvider == null) {
			primitiveDefinitionItemProvider = new PrimitiveDefinitionItemProvider(this);
		}

		return primitiveDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.TypeDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeDefinitionItemProvider typeDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.TypeDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeDefinitionAdapter() {
		if (typeDefinitionItemProvider == null) {
			typeDefinitionItemProvider = new TypeDefinitionItemProvider(this);
		}

		return typeDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.CompositeSuperType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeSuperTypeItemProvider compositeSuperTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.CompositeSuperType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeSuperTypeAdapter() {
		if (compositeSuperTypeItemProvider == null) {
			compositeSuperTypeItemProvider = new CompositeSuperTypeItemProvider(this);
		}

		return compositeSuperTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.PrimitiveSuperType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveSuperTypeItemProvider primitiveSuperTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.PrimitiveSuperType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveSuperTypeAdapter() {
		if (primitiveSuperTypeItemProvider == null) {
			primitiveSuperTypeItemProvider = new PrimitiveSuperTypeItemProvider(this);
		}

		return primitiveSuperTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.CompositeSuperTypeDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeSuperTypeDefinitionItemProvider compositeSuperTypeDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.CompositeSuperTypeDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeSuperTypeDefinitionAdapter() {
		if (compositeSuperTypeDefinitionItemProvider == null) {
			compositeSuperTypeDefinitionItemProvider = new CompositeSuperTypeDefinitionItemProvider(this);
		}

		return compositeSuperTypeDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.PrimitiveSuperTypeDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveSuperTypeDefinitionItemProvider primitiveSuperTypeDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.PrimitiveSuperTypeDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveSuperTypeDefinitionAdapter() {
		if (primitiveSuperTypeDefinitionItemProvider == null) {
			primitiveSuperTypeDefinitionItemProvider = new PrimitiveSuperTypeDefinitionItemProvider(this);
		}

		return primitiveSuperTypeDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.HostedInterfaceDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HostedInterfaceDefinitionItemProvider hostedInterfaceDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.HostedInterfaceDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHostedInterfaceDefinitionAdapter() {
		if (hostedInterfaceDefinitionItemProvider == null) {
			hostedInterfaceDefinitionItemProvider = new HostedInterfaceDefinitionItemProvider(this);
		}

		return hostedInterfaceDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.ProvidedInterfaceDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProvidedInterfaceDefinitionItemProvider providedInterfaceDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.ProvidedInterfaceDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProvidedInterfaceDefinitionAdapter() {
		if (providedInterfaceDefinitionItemProvider == null) {
			providedInterfaceDefinitionItemProvider = new ProvidedInterfaceDefinitionItemProvider(this);
		}

		return providedInterfaceDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.RequiredInterfaceDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequiredInterfaceDefinitionItemProvider requiredInterfaceDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.RequiredInterfaceDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequiredInterfaceDefinitionAdapter() {
		if (requiredInterfaceDefinitionItemProvider == null) {
			requiredInterfaceDefinitionItemProvider = new RequiredInterfaceDefinitionItemProvider(this);
		}

		return requiredInterfaceDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.OutputFlowInterfaceDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputFlowInterfaceDefinitionItemProvider outputFlowInterfaceDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.OutputFlowInterfaceDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputFlowInterfaceDefinitionAdapter() {
		if (outputFlowInterfaceDefinitionItemProvider == null) {
			outputFlowInterfaceDefinitionItemProvider = new OutputFlowInterfaceDefinitionItemProvider(this);
		}

		return outputFlowInterfaceDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.InputFlowInterfaceDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputFlowInterfaceDefinitionItemProvider inputFlowInterfaceDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.InputFlowInterfaceDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputFlowInterfaceDefinitionAdapter() {
		if (inputFlowInterfaceDefinitionItemProvider == null) {
			inputFlowInterfaceDefinitionItemProvider = new InputFlowInterfaceDefinitionItemProvider(this);
		}

		return inputFlowInterfaceDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.FlowType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlowTypeItemProvider flowTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.FlowType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlowTypeAdapter() {
		if (flowTypeItemProvider == null) {
			flowTypeItemProvider = new FlowTypeItemProvider(this);
		}

		return flowTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.IDTType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IDTTypeItemProvider idtTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.IDTType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIDTTypeAdapter() {
		if (idtTypeItemProvider == null) {
			idtTypeItemProvider = new IDTTypeItemProvider(this);
		}

		return idtTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.TypeReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeReferenceItemProvider typeReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.TypeReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeReferenceAdapter() {
		if (typeReferenceItemProvider == null) {
			typeReferenceItemProvider = new TypeReferenceItemProvider(this);
		}

		return typeReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.SubComponentDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubComponentDefinitionItemProvider subComponentDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.SubComponentDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubComponentDefinitionAdapter() {
		if (subComponentDefinitionItemProvider == null) {
			subComponentDefinitionItemProvider = new SubComponentDefinitionItemProvider(this);
		}

		return subComponentDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.Element} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementItemProvider elementItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.Element}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementAdapter() {
		if (elementItemProvider == null) {
			elementItemProvider = new ElementItemProvider(this);
		}

		return elementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.CompositeElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeElementItemProvider compositeElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.CompositeElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeElementAdapter() {
		if (compositeElementItemProvider == null) {
			compositeElementItemProvider = new CompositeElementItemProvider(this);
		}

		return compositeElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.PrimitiveElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveElementItemProvider primitiveElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.PrimitiveElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveElementAdapter() {
		if (primitiveElementItemProvider == null) {
			primitiveElementItemProvider = new PrimitiveElementItemProvider(this);
		}

		return primitiveElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.BindingDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BindingDefinitionItemProvider bindingDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.BindingDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBindingDefinitionAdapter() {
		if (bindingDefinitionItemProvider == null) {
			bindingDefinitionItemProvider = new BindingDefinitionItemProvider(this);
		}

		return bindingDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.FormalArgument} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormalArgumentItemProvider formalArgumentItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.FormalArgument}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormalArgumentAdapter() {
		if (formalArgumentItemProvider == null) {
			formalArgumentItemProvider = new FormalArgumentItemProvider(this);
		}

		return formalArgumentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.FormalArgumentsList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormalArgumentsListItemProvider formalArgumentsListItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.FormalArgumentsList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormalArgumentsListAdapter() {
		if (formalArgumentsListItemProvider == null) {
			formalArgumentsListItemProvider = new FormalArgumentsListItemProvider(this);
		}

		return formalArgumentsListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.TemplateSpecifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemplateSpecifierItemProvider templateSpecifierItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.TemplateSpecifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemplateSpecifierAdapter() {
		if (templateSpecifierItemProvider == null) {
			templateSpecifierItemProvider = new TemplateSpecifierItemProvider(this);
		}

		return templateSpecifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.AttributeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeTypeItemProvider attributeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.AttributeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeTypeAdapter() {
		if (attributeTypeItemProvider == null) {
			attributeTypeItemProvider = new AttributeTypeItemProvider(this);
		}

		return attributeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.ValueList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueListItemProvider valueListItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.ValueList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueListAdapter() {
		if (valueListItemProvider == null) {
			valueListItemProvider = new ValueListItemProvider(this);
		}

		return valueListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.TemplateReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemplateReferenceItemProvider templateReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.TemplateReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemplateReferenceAdapter() {
		if (templateReferenceItemProvider == null) {
			templateReferenceItemProvider = new TemplateReferenceItemProvider(this);
		}

		return templateReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.ArgumentDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentDefinitionItemProvider argumentDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.ArgumentDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumentDefinitionAdapter() {
		if (argumentDefinitionItemProvider == null) {
			argumentDefinitionItemProvider = new ArgumentDefinitionItemProvider(this);
		}

		return argumentDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.AttributeDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeDefinitionItemProvider attributeDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.AttributeDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeDefinitionAdapter() {
		if (attributeDefinitionItemProvider == null) {
			attributeDefinitionItemProvider = new AttributeDefinitionItemProvider(this);
		}

		return attributeDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.ImplementationDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationDefinitionItemProvider implementationDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.ImplementationDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationDefinitionAdapter() {
		if (implementationDefinitionItemProvider == null) {
			implementationDefinitionItemProvider = new ImplementationDefinitionItemProvider(this);
		}

		return implementationDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.DataDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataDefinitionItemProvider dataDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.DataDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataDefinitionAdapter() {
		if (dataDefinitionItemProvider == null) {
			dataDefinitionItemProvider = new DataDefinitionItemProvider(this);
		}

		return dataDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.InlineCodeC} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InlineCodeCItemProvider inlineCodeCItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.InlineCodeC}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInlineCodeCAdapter() {
		if (inlineCodeCItemProvider == null) {
			inlineCodeCItemProvider = new InlineCodeCItemProvider(this);
		}

		return inlineCodeCItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.FilePath} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilePathItemProvider filePathItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.FilePath}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilePathAdapter() {
		if (filePathItemProvider == null) {
			filePathItemProvider = new FilePathItemProvider(this);
		}

		return filePathItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.AnnotationsList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationsListItemProvider annotationsListItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.AnnotationsList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationsListAdapter() {
		if (annotationsListItemProvider == null) {
			annotationsListItemProvider = new AnnotationsListItemProvider(this);
		}

		return annotationsListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.Annotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationItemProvider annotationItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.Annotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationAdapter() {
		if (annotationItemProvider == null) {
			annotationItemProvider = new AnnotationItemProvider(this);
		}

		return annotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.AnnotationElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationElementItemProvider annotationElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.AnnotationElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationElementAdapter() {
		if (annotationElementItemProvider == null) {
			annotationElementItemProvider = new AnnotationElementItemProvider(this);
		}

		return annotationElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.ElementValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementValueItemProvider elementValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.ElementValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementValueAdapter() {
		if (elementValueItemProvider == null) {
			elementValueItemProvider = new ElementValueItemProvider(this);
		}

		return elementValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.ElementValueArrayInitializer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementValueArrayInitializerItemProvider elementValueArrayInitializerItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.ElementValueArrayInitializer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementValueArrayInitializerAdapter() {
		if (elementValueArrayInitializerItemProvider == null) {
			elementValueArrayInitializerItemProvider = new ElementValueArrayInitializerItemProvider(this);
		}

		return elementValueArrayInitializerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.mindEd.adl.ConstantValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstantValueItemProvider constantValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.mindEd.adl.ConstantValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstantValueAdapter() {
		if (constantValueItemProvider == null) {
			constantValueItemProvider = new ConstantValueItemProvider(this);
		}

		return constantValueItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (adlFileItemProvider != null) adlFileItemProvider.dispose();
		if (architectureDefinitionItemProvider != null) architectureDefinitionItemProvider.dispose();
		if (importDefinitionItemProvider != null) importDefinitionItemProvider.dispose();
		if (compositeDefinitionItemProvider != null) compositeDefinitionItemProvider.dispose();
		if (primitiveDefinitionItemProvider != null) primitiveDefinitionItemProvider.dispose();
		if (typeDefinitionItemProvider != null) typeDefinitionItemProvider.dispose();
		if (compositeSuperTypeItemProvider != null) compositeSuperTypeItemProvider.dispose();
		if (primitiveSuperTypeItemProvider != null) primitiveSuperTypeItemProvider.dispose();
		if (compositeSuperTypeDefinitionItemProvider != null) compositeSuperTypeDefinitionItemProvider.dispose();
		if (primitiveSuperTypeDefinitionItemProvider != null) primitiveSuperTypeDefinitionItemProvider.dispose();
		if (hostedInterfaceDefinitionItemProvider != null) hostedInterfaceDefinitionItemProvider.dispose();
		if (providedInterfaceDefinitionItemProvider != null) providedInterfaceDefinitionItemProvider.dispose();
		if (requiredInterfaceDefinitionItemProvider != null) requiredInterfaceDefinitionItemProvider.dispose();
		if (outputFlowInterfaceDefinitionItemProvider != null) outputFlowInterfaceDefinitionItemProvider.dispose();
		if (inputFlowInterfaceDefinitionItemProvider != null) inputFlowInterfaceDefinitionItemProvider.dispose();
		if (flowTypeItemProvider != null) flowTypeItemProvider.dispose();
		if (idtTypeItemProvider != null) idtTypeItemProvider.dispose();
		if (typeReferenceItemProvider != null) typeReferenceItemProvider.dispose();
		if (subComponentDefinitionItemProvider != null) subComponentDefinitionItemProvider.dispose();
		if (elementItemProvider != null) elementItemProvider.dispose();
		if (compositeElementItemProvider != null) compositeElementItemProvider.dispose();
		if (primitiveElementItemProvider != null) primitiveElementItemProvider.dispose();
		if (bindingDefinitionItemProvider != null) bindingDefinitionItemProvider.dispose();
		if (formalArgumentItemProvider != null) formalArgumentItemProvider.dispose();
		if (formalArgumentsListItemProvider != null) formalArgumentsListItemProvider.dispose();
		if (templateSpecifierItemProvider != null) templateSpecifierItemProvider.dispose();
		if (attributeTypeItemProvider != null) attributeTypeItemProvider.dispose();
		if (valueListItemProvider != null) valueListItemProvider.dispose();
		if (templateReferenceItemProvider != null) templateReferenceItemProvider.dispose();
		if (argumentDefinitionItemProvider != null) argumentDefinitionItemProvider.dispose();
		if (attributeDefinitionItemProvider != null) attributeDefinitionItemProvider.dispose();
		if (implementationDefinitionItemProvider != null) implementationDefinitionItemProvider.dispose();
		if (dataDefinitionItemProvider != null) dataDefinitionItemProvider.dispose();
		if (inlineCodeCItemProvider != null) inlineCodeCItemProvider.dispose();
		if (filePathItemProvider != null) filePathItemProvider.dispose();
		if (annotationsListItemProvider != null) annotationsListItemProvider.dispose();
		if (annotationItemProvider != null) annotationItemProvider.dispose();
		if (annotationElementItemProvider != null) annotationElementItemProvider.dispose();
		if (elementValueItemProvider != null) elementValueItemProvider.dispose();
		if (elementValueArrayInitializerItemProvider != null) elementValueArrayInitializerItemProvider.dispose();
		if (constantValueItemProvider != null) constantValueItemProvider.dispose();
	}

}
