<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:description_2="http://www.eclipse.org/sirius/table/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" name="Adl" version="8.1.0">
  <ownedViewpoints name="AdlViewpoint" modelFileExtension="adl">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="ArchitectureDiagram" label="Architecture Diagram" domainClass="adl.AdlFile">
      <metamodel href="../../org.ow2.mindEd.adl/model/generated/Adl.ecore#/"/>
      <metamodel href="../../org.ow2.mindEd.itf/model/generated/Itf.ecore#/"/>
      <layout xsi:type="description_1:CompositeLayout" direction="LeftToRight"/>
      <defaultLayer name="DefaultLayer">
        <edgeMappings name="SimpleBindingDefinition" preconditionExpression="[sourceView.eInverse()->filter(DNode).target->includes(self.sourceParent) and targetView.eInverse()->filter(DNode).target->includes(self.targetParent)/]" semanticCandidatesExpression="[self->filter(adl::AdlFile).architectureDefinition->filter(adl::CompositeDefinition).elements->filter(adl::BindingDefinition)/]" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_RequiredInterfaceDefinition']" targetMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_ProvidedInterfaceDefinition']" targetFinderExpression="[self.targetInterface/]" sourceFinderExpression="[self.sourceInterface/]" domainClass="adl.BindingDefinition" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ExportDelegationBindingDefinition" preconditionExpression="[targetView.eInverse()->filter(DNode).target->includes(self.targetParent)/]" semanticCandidatesExpression="[self->filter(adl::AdlFile).architectureDefinition->filter(adl::CompositeDefinition).elements->filter(adl::BindingDefinition)/]" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@borderedNodeMappings[name='CompositeProvidedInterfaceDefinition']" targetMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_ProvidedInterfaceDefinition']" targetFinderExpression="[self.targetInterface/]" sourceFinderExpression="[self.sourceInterface/]" domainClass="adl.BindingDefinition" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ImportDelegationBindingDefinition" preconditionExpression="[sourceView.eInverse()->filter(DNode).target->includes(self.sourceParent)/]" semanticCandidatesExpression="[self->filter(adl::AdlFile).architectureDefinition->filter(adl::CompositeDefinition).elements->filter(adl::BindingDefinition)/]" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_RequiredInterfaceDefinition']" targetMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@borderedNodeMappings[name='CompositeRequiredInterfaceDefinition']" targetFinderExpression="[self.targetInterface/]" sourceFinderExpression="[self.sourceInterface/]" domainClass="adl.BindingDefinition" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="CompositeDefinition" semanticCandidatesExpression="[self->filter(adl::AdlFile).architectureDefinition/]" synchronizationLock="true" domainClass="adl.CompositeDefinition">
          <borderedNodeMappings name="CompositeProvidedInterfaceDefinition" semanticCandidatesExpression="[self->filter(adl::CompositeDefinition)/]" synchronizationLock="true" domainClass="adl.ProvidedInterfaceDefinition">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[self.signature->filter(itf::InterfaceDefinition).name + '\n' + name /]" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="CompositeRequiredInterfaceDefinition" semanticCandidatesExpression="[self->filter(adl::CompositeDefinition)/]" synchronizationLock="true" domainClass="adl.RequiredInterfaceDefinition">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[self.signature->filter(itf::InterfaceDefinition).name + '\n' + name /]" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </borderedNodeMappings>
          <subNodeMappings name="SubComponentDefinition" semanticCandidatesExpression="[self->filter(adl::CompositeDefinition).elements/]" synchronizationLock="true" domainClass="adl.SubComponentDefinition">
            <borderedNodeMappings name="sub_ProvidedInterfaceDefinition" semanticCandidatesExpression="[self->filter(adl::SubComponentDefinition).type->filter(adl::ArchitectureDefinition).eAllContents()->filter(adl::ProvidedInterfaceDefinition)/]" synchronizationLock="true" domainClass="adl.ProvidedInterfaceDefinition">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[self.signature->filter(itf::InterfaceDefinition).name + '\n' + name /]" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
              </style>
            </borderedNodeMappings>
            <borderedNodeMappings name="sub_RequiredInterfaceDefinition" semanticCandidatesExpression="[self->filter(adl::SubComponentDefinition).type->filter(adl::ArchitectureDefinition).eAllContents()->filter(adl::RequiredInterfaceDefinition)/]" synchronizationLock="true" domainClass="adl.RequiredInterfaceDefinition">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[self.signature->filter(itf::InterfaceDefinition).name + '\n' + name /]" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              </style>
            </borderedNodeMappings>
            <style xsi:type="style:SquareDescription" labelFormat="italic" showIcon="false" labelExpression="[type->filter(adl::TypeReference).name + '\n' +name/]" sizeComputationExpression="5" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcHeight="2" labelSize="10" labelFormat="bold" showIcon="false" widthComputationExpression="" heightComputationExpression="">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <containerMappings name="PrimitiveDefinition" semanticCandidatesExpression="[architectureDefinition/]" synchronizationLock="true" domainClass="adl.PrimitiveDefinition" childrenPresentation="List">
          <borderedNodeMappings name="PrimitiveProvidedInterfaceDefinition" semanticCandidatesExpression="[self->filter(adl::PrimitiveDefinition)/]" synchronizationLock="true" domainClass="adl.ProvidedInterfaceDefinition">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[self.signature->filter(itf::InterfaceDefinition).name + '\n' + name /]" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="PrimitiveRequiredInterfaceDefinition" semanticCandidatesExpression="[self->filter(adl::PrimitiveDefinition)/]" synchronizationLock="true" domainClass="adl.RequiredInterfaceDefinition">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[self.signature->filter(itf::InterfaceDefinition).name + '\n' + name /]" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </borderedNodeMappings>
          <subNodeMappings name="FileC" semanticCandidatesExpression="[self->filter(adl::PrimitiveDefinition).eAllContents()->filter(adl::FileC)/]" domainClass="adl.FileC">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[directory + name/]" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="InlineCodeC" semanticCandidatesExpression="[self->filter(adl::PrimitiveDefinition).eAllContents()->filter(adl::InlineCodeC)/]" domainClass="adl.InlineCodeC">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="['inline code'/]" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcHeight="2" labelSize="10" labelFormat="bold" showIcon="false" widthComputationExpression="" heightComputationExpression="">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
      </defaultLayer>
      <additionalLayers name="Inherited_Level1" label="Inheritance level 1" reusedMappings="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']">
        <edgeMappings name="InheritedSimpleBindingDefinition" preconditionExpression="[not self->filter(adl::AdlFile).architectureDefinition->filter(adl::CompositeDefinition).superTypes->oclIsUndefined()/]" semanticCandidatesExpression="[self->filter(adl::AdlFile).architectureDefinition->filter(adl::CompositeDefinition).superTypes.targetArchDef->filter(adl::CompositeSuperTypeDefinition)->filter(adl::CompositeDefinition).elements->filter(adl::BindingDefinition)/]" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_RequiredInterfaceDefinition']" targetMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_ProvidedInterfaceDefinition']" targetFinderExpression="[self.targetInterface/]" sourceFinderExpression="[self.sourceInterface/]" domainClass="adl.BindingDefinition" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="InheritedExportDelegationBindingDefinition" preconditionExpression="[not self->filter(adl::AdlFile).architectureDefinition->filter(adl::CompositeDefinition).superTypes->oclIsUndefined()/]" semanticCandidatesExpression="[self->filter(adl::AdlFile).architectureDefinition->filter(adl::CompositeDefinition).superTypes.targetArchDef->filter(adl::CompositeSuperTypeDefinition)->filter(adl::CompositeDefinition).elements->filter(adl::BindingDefinition)/]" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@borderedNodeMappings[name='CompositeProvidedInterfaceDefinition']" targetMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_ProvidedInterfaceDefinition']" targetFinderExpression="[self.targetInterface/]" sourceFinderExpression="[self.sourceInterface/]" domainClass="adl.BindingDefinition" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="InheritedImportDelegationBindingDefinition" preconditionExpression="[not self->filter(adl::AdlFile).architectureDefinition->filter(adl::CompositeDefinition).superTypes->oclIsUndefined()/]" semanticCandidatesExpression="[self->filter(adl::AdlFile).architectureDefinition->filter(adl::CompositeDefinition).superTypes.targetArchDef->filter(adl::CompositeSuperTypeDefinition)->filter(adl::CompositeDefinition).elements->filter(adl::BindingDefinition)/]" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_RequiredInterfaceDefinition']" targetMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@borderedNodeMappings[name='CompositeRequiredInterfaceDefinition']" targetFinderExpression="[self.targetInterface/]" sourceFinderExpression="[self.sourceInterface/]" domainClass="adl.BindingDefinition" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="ExtendedCompositeDefinition" semanticCandidatesExpression="[self->filter(adl::AdlFile).architectureDefinition/]" synchronizationLock="true" reusedBorderedNodeMappings="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_ProvidedInterfaceDefinition'] //@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_RequiredInterfaceDefinition']" reusedNodeMappings="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']" reusedContainerMappings="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']" inheritsAncestorFilters="false" importedMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']">
          <borderedNodeMappings xsi:type="description_1:NodeMappingImport" name="InheritedCompositeProvidedInterfaceDefinition" preconditionExpression="[not container.superTypes->oclIsUndefined()/]" semanticCandidatesExpression="[self->filter(adl::CompositeDefinition).superTypes.targetArchDef->filter(adl::CompositeSuperTypeDefinition)->filter(adl::CompositeDefinition).elements->filter(adl::ProvidedInterfaceDefinition)/]" synchronizationLock="true" reusedBorderedNodeMappings="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@borderedNodeMappings[name='CompositeProvidedInterfaceDefinition']" inheritsAncestorFilters="false" importedMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@borderedNodeMappings[name='CompositeProvidedInterfaceDefinition']"/>
          <borderedNodeMappings xsi:type="description_1:NodeMappingImport" name="InheritedCompositeRequiredInterfaceDefinition" preconditionExpression="[not container.superTypes->oclIsUndefined()/]" semanticCandidatesExpression="[self->filter(adl::CompositeDefinition).superTypes.targetArchDef->filter(adl::CompositeSuperTypeDefinition)->filter(adl::CompositeDefinition).elements->filter(adl::RequiredInterfaceDefinition)/]" synchronizationLock="true" domainClass="adl.RequiredInterfaceDefinition" reusedBorderedNodeMappings="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@borderedNodeMappings[name='CompositeRequiredInterfaceDefinition']" inheritsAncestorFilters="false" importedMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@borderedNodeMappings[name='CompositeRequiredInterfaceDefinition']"/>
          <subNodeMappings xsi:type="description_1:NodeMappingImport" name="InheritedSubComponentDefinition" preconditionExpression="[not container.superTypes->oclIsUndefined()/]" semanticCandidatesExpression="[self->filter(adl::CompositeDefinition).superTypes.targetArchDef->filter(adl::CompositeSuperTypeDefinition)->filter(adl::CompositeDefinition).elements->filter(adl::SubComponentDefinition)/]" synchronizationLock="true" domainClass="adl.SubComponentDefinition" reusedBorderedNodeMappings="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition'] //@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_ProvidedInterfaceDefinition'] //@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']/@borderedNodeMappings[name='sub_RequiredInterfaceDefinition']" inheritsAncestorFilters="false" importedMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='ArchitectureDiagram']/@defaultLayer/@containerMappings[name='CompositeDefinition']/@subNodeMappings[name='SubComponentDefinition']"/>
        </containerMappings>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:CrossTableDescription" name="DependencyMatrix" label="Dependency Matrix" domainClass="adl.CompositeDefinition">
      <ownedLineMappings name="ComponentsLine" domainClass="adl.SubComponentDefinition" semanticCandidatesExpression="[elements->filter(adl::SubComponentDefinition)/]" headerLabelExpression="[name/]">
        <ownedSubLines name="RequiredInterfacesLine" domainClass="adl.RequiredInterfaceDefinition" semanticCandidatesExpression="[self.type->filter(adl::ArchitectureDefinition).eAllContents()->filter(adl::RequiredInterfaceDefinition)/]" headerLabelExpression="[name/]"/>
      </ownedLineMappings>
      <ownedColumnMappings name="ComponentsColumn" headerLabelExpression="[name/]" initialWidth="7" domainClass="adl.SubComponentDefinition" semanticCandidatesExpression="[elements->filter(adl::SubComponentDefinition)/]"/>
      <intersection name="ComponentsIntersection" lineMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='DependencyMatrix']/@ownedLineMappings[name='ComponentsLine']" columnMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='DependencyMatrix']/@ownedColumnMappings.0" labelExpression="true" useDomainClass="true" columnFinderExpression="[targetParent/]" lineFinderExpression="[sourceParent/]" semanticCandidatesExpression="[elements->filter(adl::BindingDefinition)/]" domainClass="adl.BindingDefinition">
        <defaultForeground>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultForeground>
        <defaultBackground>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
        </defaultBackground>
      </intersection>
      <intersection name="SourceInterfaceToComponentIntersection" canEdit="[false/]" lineMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='DependencyMatrix']/@ownedLineMappings[name='ComponentsLine']/@ownedSubLines[name='RequiredInterfacesLine']" columnMapping="//@ownedViewpoints[name='AdlViewpoint']/@ownedRepresentations[name='DependencyMatrix']/@ownedColumnMappings.0" labelExpression="[targetInterface.name/]" useDomainClass="true" columnFinderExpression="[targetParent/]" lineFinderExpression="[sourceInterface/]" semanticCandidatesExpression="[elements->filter(adl::BindingDefinition)/]" domainClass="adl.BindingDefinition">
        <defaultForeground>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultForeground>
        <defaultBackground>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </defaultBackground>
      </intersection>
    </ownedRepresentations>
  </ownedViewpoints>
</description:Group>
