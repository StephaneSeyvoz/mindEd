<%@ jet package="org.ow2.mindEd.ide.core.template" class="TemplateMake" %>
# Generated Makefile - Manual changes will not be reflected in the Eclipse project configuration.

# If the MIND_ROOT variable is defined, look for 'mindc' in this directory
# otherwise, expect that 'mindc' is in the PATH.
ifdef MIND_ROOT
  # If MIND_ROOT contains '\', replace them by '/' (for Windows)
  MINDC = $(subst \,/, $(MIND_ROOT)/bin/mindc)
else 
  MINDC = mindc
endif

# Non-MindEd users should invoke this Makefile using "make CONFIGURATION=<configName> all" to run the build,
# where <configName> matches the desired <configName>.properties file.
include $(CONFIGURATION).properties

# Strings and comments management - Skip to "all:" for the real build.

#Platform Separator handling
PATH_SEPARATOR =:
ifneq (,$(findstring Windows, $(OS))) # Handle Windows-specific separators (':' otherwise)
    PATH_SEPARATOR =;
endif

sourcePathArg=
ifdef sourcePath
	ifneq ($(sourcePath), "")
		sourcePathArg=--src-path="$(subst \,/,$(subst ;,$(PATH_SEPARATOR),$(subst ;;,;,$(sourcePath))))"
	endif
endif

outputDirVar=build/$(CONFIGURATION) #default value
ifdef outputDirectory
	ifneq ($(outputDirectory), "")
		outputDirVar="$(subst \,/,$(subst ;,$(PATH_SEPARATOR),$(subst ;;,;,$(outputDirectory))))/$(CONFIGURATION)"
	endif
endif

includePathArg=
ifdef includePath
	ifneq ($(includePath), "")
		includePathArg=--inc-path="$(subst \,/,$(subst ;,$(PATH_SEPARATOR),$(subst ;;,;,$(includePath))))"
	endif
endif

compilerCommandArg=
ifdef compilerCommand
	ifneq ($(compilerCommand), "")
		compilerCommandArg=--compiler-command="$(compilerCommand)"
	endif
endif

linkerCommandArg=
ifdef linkerCommand
	ifneq ($(linkerCommand), "")
		linkerCommandArg=--linker-command="$(linkerCommand)"
	endif
endif

assemblerCommandArg=
ifdef assemblerCommand
	ifneq ($(assemblerCommand), "")
		assemblerCommandArg=--assembler-command="$(assemblerCommand)"
	endif
endif

asFlagArg=
ifdef asFlag
	ifneq ($(asFlag), "")
		asFlagArg=--as-flags="$(asFlag)"
	endif
endif

cppFlagsArg=
ifdef cppFlags
	ifneq ($(cppFlags), "")
		cppFlagsArg=--cpp-flags="$(cppFlags)"
	endif
endif

cFlagsArg=
ifdef cFlags
	ifneq ($(cFlags), "")
		cFlagsArg=--c-flags="$(cFlags)"
	endif
endif

ldFlagsArg=
ifdef ldFlags
	ifneq ($(ldFlags), "")
		ldFlagsArg=--ld-flags="$(ldFlags)"
	endif
endif

extraOptionsArg=
ifdef extraOptions
	ifneq ($(extraOptions), "")
		extraOptionsArg="$(extraOptions)"
	endif
endif

# The real build command.

all: build
ifdef targetComponent
	if test ! -x $(MINDC); \
        then echo ' Not found mindc ! Set MIND_ROOT variable or go to 'Mindc location' eclipse preference page'; \
    	else $(MINDC) $(sourcePathArg) $(includePathArg) $(compilerCommandArg) $(linkerCommandArg) $(assemblerCommandArg) $(asFlagArg) $(cppFlagsArg) $(cFlagsArg) $(ldFlagsArg) $(extraOptionsArg) -o=$(outputDirVar) $(targetComponent):$(binaryName) ;\
    fi
else
	echo "No application defined - MindEd users: Please configure your project target with the 'Mind Path' -> (right click) 'New application' menu."
endif

# Output folder handling.

build:
	mkdir -p $(outputDirVar)

clean:
	rm -Rf $(outputDirVar); \
	mkdir -p $(outputDirVar)

.PHONY: all clean build
